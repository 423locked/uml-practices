@startuml

actor Абонент
actor Администратор

usecase "Регистрация абонента" as UC1
usecase "Аннулирование абонента" as UC2
usecase "Подключение к системе" as UC3
usecase "Отключение от системы" as UC4
usecase "Обмен сообщениями" as UC5

Абонент -> UC1
Абонент -> UC3
Абонент -> UC4
Абонент -> UC5

Администратор -> UC2

@enduml

@startuml

package "Система обмена сообщениями" {

    class Абонент {
        +id: int
        +имя: String
        +статус: String
        +подключиться()
        +отключиться()
        +послатьСообщение()
        +получитьСообщение()
    }

    class Администратор {
        +id: int
        +имя: String
        +аннулироватьАбонента(абонент: Абонент)
    }
    
    class Сообщение {
        +текст: String
        +время: DateTime
        +отправитель: Абонент
        +получатель: Абонент
        +отправить()
    }

    Абонент "1" -- "*" Сообщение
    Администратор "1" ->  "0..*" Абонент : аннулировать

}

@enduml

@startuml

actor Абонент1
actor Абонент2
participant "Сервер" as Server

Абонент1 -> Server: подключиться()
Server -> Абонент1: подтвердить подключение

Абонент1 -> Абонент2: послатьСообщение()
Абонент2 -> Server: получитьСообщение()

Абонент2 -> Абонент1: сообщить о получении

@enduml